Description: >
  Bolatan Ibrahim / CloudFormation Stack
  This template deploys a VPC with a pair of public and private subnet spread
  across two Availability Zones. It deploys an Internet Gateway with a default
  route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ)
  and default routes for them in the private subnets.

Parameters:
  Environment:
    Description: Name of the environment that will be prefixed to all resources for easy identification.
    Type: String

  VpcCIDR:
    Description: IP range for this VPC (CIDR notation).
    Type: String
    Default: 10.0.0.0/16
  
  PublicSubnet1CIDR:
    Description: IP range for this Subnet (CIDR notation).
    Type: String
    Default: 10.0.0.0/24
  
  PublicSubnet2CIDR:
    Description: IP range for this Subnet (CIDR notation).
    Type: String
    Default: 10.0.0.0/24
  
  PrivateSubnet1CIDR:
    Description: IP range for this Subnet (CIDR notation).
    Type: String
    Default: 10.0.0.0/24

  PrivateSubnet2CIDR:
    Description: IP range for this Subnet (CIDR notation).
    Type: String
    Default: 10.0.0.0/24
  
  InternetCIDR:
    Description: IP range for the internet
    Type: String
    Default: 0.0.0.0/0
  



Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref Environment
  
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref Environment

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${Environment} Public Subnet (AZ1)
  
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${Environment} Public Subnet (AZ2)
  
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: false
      CidrBlock: !Ref PrivateSubnet1CIDR
      Tags: 
        - Key: Name
          Value: !Sub ${Environment} Private Subnet (AZ1)
  
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      Tags:
        - Key: Name
          Value: !Sub ${Environment} Private Subnet (AZ2)

  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
  
  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
  
  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1
  
  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2
  
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: !Sub ${Environment} Public Routes
  
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: !Ref InternetCIDR
      GatewayId: !Ref InternetGateway
  
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2
  
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Environment} Private Routes (AZ1)
  
  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: !Ref InternetCIDR
      NatGatewayId: !Ref NatGateway1
  
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1
  
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Environment} Private Routes (AZ2)
  
  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: !Ref InternetCIDR
      NatGatewayId: !Ref NatGateway2
  
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2
  

Outputs:
  VPC:
    Description: Reference to VPC
    Value: !Ref VPC
    Export: 
      Name: !Sub ${Environment}-VPCID
  
  PublicRouteTable:
    Description: Public Routing
    Value: !Ref PublicRouteTable
    Export:
      Name: !Sub ${Environment}-PUB-RT
  
  PrivateRouteTable1:
    Description: Private Routing (AZ1)
    Value: !Ref PrivateRouteTable1
    Export:
      Name: !Sub ${Environment}-PRI1-RT
  
  PrivateRouteTable2:
    Description: Private Routing (AZ2)
    Value: !Ref PrivateRouteTable2
    Export:
      Name: !Sub ${Environment}-PRI2-RT
  
  PrivateSubnets:
    Description: All Private Subnets available in our network.
    Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
    Export:
      Name: !Sub ${Environment}-PRI-NETS

  PublicSubnets:
    Description: All Public Subnets available in our network.
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
    Export:
      Name: !Sub ${Environment}-PUB-NETS
  
  PublicSubnet1:
    Description: Reference to the public Subnet in the first AvailabilityZone.
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${Environment}-PUB1-SN
  
  PublicSubnet2:
    Description: Reference to the public Subnet in the second AvailabilityZone.
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${Environment}-PUB2-SN
  
  PrivateSubnet1:
    Description: Reference to the private Subnet in the first AvailabilityZone.
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${Environment}-PRI1-SN
  
  PrivateSubnet2:
    Description: Reference to the private Subnet in the second AvailabilityZone.
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${Environment}-PRI2-SN
  